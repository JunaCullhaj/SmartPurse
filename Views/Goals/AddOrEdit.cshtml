@model Expense_Tracker.Models.Goal

@{
    ViewData["PageTitle"] = Model.Id == 0 ? "Create a New Goal" : "Edit Goal";
}

<div class="row">
    <div class="col-md-7">
        <div class="widget p-5" style="background-color:#212b36; border-radius:8px;">
            <form id="goalForm">
                @Html.AntiForgeryToken()

                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="Title" />
                <input type="hidden" asp-for="TargetAmount" />
                <input type="hidden" asp-for="TargetDate" />

                <div class="mb-3">
                    <ejs-textbox id="title" placeholder="Title" ejs-for="Title" floatLabelType="Always"></ejs-textbox>
                </div>

                <div class="mb-3">
                    <ejs-numerictextbox id="targetAmount" ejs-for="TargetAmount"
                                        placeholder="Target Amount" floatLabelType="Always"
                                        min=0 format="c0"></ejs-numerictextbox>
                </div>

                <div class="mb-3">
                    <ejs-datepicker id="targetDate" ejs-for="TargetDate"
                                    placeholder="Target Date" floatLabelType="Always"
                                    format="MMM-dd-yy"></ejs-datepicker>
                </div>

                <div class="mb-3">
                    <label class="form-label">Suggested Monthly Saving</label>
                    <input id="suggestion" class="form-control bg-dark text-white border-secondary" readonly />
                </div>

                <div class="d-flex gap-2">
                    <button id="submit" type="button" class="btn btn-success">Submit</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>

    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center" style="background-color:#212b36; border-radius:8px;">
            <i class="fa-solid fa-bullseye fa-3x text-white"></i>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        $(document).ready(function () {
            $('#targetAmount').on('change', calculateSuggestion);
            $('#targetDate').on('change', calculateSuggestion);

            $('#submit').click(function () {
                const title = document.getElementById('title').ej2_instances[0].value;
                const amount = document.getElementById('targetAmount').ej2_instances[0].value;
                const datePicker = document.getElementById('targetDate').ej2_instances[0];
                const dateObj = datePicker.value;

                if (!title || !amount || !dateObj) {
                    alert('Please fill all fields correctly.');
                    return;
                }

                const antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

                console.log('Submitting with data:', {
                    Title: title,
                    TargetAmount: amount,
                    TargetDate: dateObj
                });

                $.ajax({
                    url: '/Goals/AddOrEdit',
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'RequestVerificationToken': antiForgeryToken
                    },
                    data: JSON.stringify({
                        Id: $('input[name="Id"]').val() || 0,
                        Title: title,
                        TargetAmount: amount,
                        TargetDate: dateObj.toISOString()
                    }),
                    success: function () {
                        console.log('✅ Goal Saved Successfully.');
                        window.location.href = '/Goals/Index';
                    },
                    error: function (xhr, status, error) {
                        console.error('❌ Failed to Save Goal:', xhr.responseText);
                        alert('Failed to save goal!');
                    }
                });
            });
        });

        function calculateSuggestion() {
            const targetAmount = document.getElementById('targetAmount').ej2_instances[0].value;
            const datePicker = document.getElementById('targetDate').ej2_instances[0];
            const targetDate = datePicker.value;

            if (targetAmount && targetDate) {
                $.ajax({
                    url: '/Goals/CalculateSuggestion',
                    type: 'POST',
                    data: {
                        targetAmount: targetAmount,
                        targetDate: targetDate.toISOString()
                    },
                    success: function (data) {
                        document.getElementById('suggestion').value = data + ' per month';
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', xhr.responseText);
                        alert('Failed to calculate suggested saving.');
                    }
                });
            }
        }

    </script>
}
